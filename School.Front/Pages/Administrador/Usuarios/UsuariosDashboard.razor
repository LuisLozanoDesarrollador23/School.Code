@page "/usuarios"
@using School.Shared.Service.General.Usuarios
@using School.Shared.Transferencia.Modelos.UsuarioAggregament.Response

<PageTitle>Usuarios</PageTitle>

<h1>Usuarios</h1>

<p>Listado de los usuarios creados en el sistema.</p>


<div class="container mt-4">
    <div class="d-flex justify-content-between mb-3">
        <div>
            <button class="btn btn-primary" id="btnRefrescar" @onclick="RefrescarDatos">Refrescar</button>
            <a href="/usuario/crear" class="btn btn-success">Registrar</a>
        </div>
    </div>
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
        <tr>
            <th>Nombre</th>
            <th>Rol</th>
            <th>Estado</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @if (_usuariosRegistradas != null)
        {
            @foreach (var item in _usuariosRegistradas)
            {
                <tr>
                    <td>@item.PrimerNombre @item.SegundoNombre @item.PrimerApellido @item.SegundoApellido</td>
                    <td>@item.TipoUsuario</td>
                    <td>@item.Estado</td>
                    <td>
                        <a href="/@item" class="btn btn-sm btn-info">Editar</a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>

@code{

    private List<Usuario>? _usuariosRegistradas;

    protected override async Task OnInitializedAsync()
    {
        await RefrescarDatos();
    }

    private async Task RefrescarDatos()
    {
        await ConsultarUsuarios();
    }

    private async Task ConsultarUsuarios()
    {
        var response = await ServiceUsuario.BuscarUsuarios();

        if (response.status)
        {
            _usuariosRegistradas = response.usuarios;
        }
    }

}